const scroll = new LocomotiveScroll({
    el: document.querySelector('.main'),
    smooth: true
});

with help of the above code we cannot run locomotive and scrolling at same time because locomotive does not allow so we need to write another code are as follows:



gsap.registerPlugin(ScrollTrigger);

// Using Locomotive Scroll from Locomotive https://github.com/locomotivemtl/locomotive-scroll

const locoScroll = new LocomotiveScroll({
  el: document.querySelector(".main"),
  smooth: true
});
// each time Locomotive Scroll updates, tell ScrollTrigger to update too (sync positioning)
locoScroll.on("scroll", ScrollTrigger.update);

// tell ScrollTrigger to use these proxy methods for the ".main" element since Locomotive Scroll is hijacking things
ScrollTrigger.scrollerProxy(".main", {
  scrollTop(value) {
    return arguments.length ? locoScroll.scrollTo(value, 0, 0) : locoScroll.scroll.instance.scroll.y;
  }, // we don't have to define a scrollLeft because we're only scrolling vertically.
  getBoundingClientRect() {
    return {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};
  },
  // LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).
  pinType: document.querySelector(".main").style.transform ? "transform" : "fixed"
});



// each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll. 
ScrollTrigger.addEventListener("refresh", () => locoScroll.update());

// after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.
ScrollTrigger.refresh();



gsap.registerPlugin(ScrollTrigger);

const animation = gsap.to(".page1 h1", {

    x: -100,
    duration: 1,
  });


  ScrollTrigger.create({
    trigger: ".page h1",
    markers:true,
    scroller:".main",
    start: "top 27%", // Adjust this to your needs
    end: "top 0", // Adjust this to your needs
    scrub: true, // Enables smooth scrolling animation
  });

// gsap.to(".page1 h1",{
//     x:-100,
//     duration:1,
//     ScrollTrigger:{
//         trigger:".page1 h1",
//         scroller:".main",
//         markers:true,
//         start: "top 27%",
//         end:"top 0",
//         scrub:2
//     }                                                                                                                                                                                                                                                                                           
// })
